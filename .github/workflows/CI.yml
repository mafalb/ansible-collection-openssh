# Copyright (c) 2021 Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: CI

on:  # yamllint disable-line rule:truthy

  push:
    branches:
    - '**'
    tags-ignore:
    - '*'
  pull_request:
  pull_request_review:
  schedule:
    - cron: '40 11 * * 2'

jobs:

  ansible-test:

    # don't run on pull request from ourselves
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

      matrix:

        include:

          - ansible_version: '2.9'
            python_version: '2.7'

          - ansible_version: '2.9'
            python_version: '3.5'

          - ansible_version: '2.9'
            python_version: '3.6'

          - ansible_version: '2.9'
            python_version: '3.7'

          - ansible_version: '2.9'
            python_version: '3.8'

          - ansible_version: '2.9.6'
            python_version: '3.8'


          - ansible_version: '2.10'
            python_version: '3.6'

          - ansible_version: '2.10'
            python_version: '3.7'

          - ansible_version: '2.10'
            python_version: '3.8'

          - ansible_version: '2.10'
            python_version: '3.9'


          - ansible_version: '2.11'
            python_version: 3.6

          - ansible_version: '2.11'
            python_version: 3.7

          - ansible_version: '2.11'
            python_version: 3.8

          - ansible_version: '2.11'
            python_version: 3.9


          - ansible_version: '2.12'
            python_version: '3.8'

          - ansible_version: '2.12'
            python_version: '3.9'

          - ansible_version: '2.12'
            python_version: '3.10'

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      # necessary ?
      ANSIBLE_PYTHON_INTERPRETER: python${{ matrix.python_version }}

    defaults:
      run:
        working-directory: ansible_collections/mafalb/openssh

    steps:

      - name: checkout collection mafalb.openssh
        uses: actions/checkout@v2
        with:
          path: ansible_collections/mafalb/openssh

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      # necessary ?
      - name: install virtualenv for python 2.7
        if: matrix.python_version == '2.7'
        run: |
          pip install virtualenv

      - name: install ansible
        run: |
          ansible-galaxy collection install mafalb.ansible
          ansible-playbook -D ~/.ansible/collections/ansible_collections/mafalb/ansible/playbooks/install-ansible.yml -e '{"virtualenv_packages":["_ansible==${{ matrix.ansible_version }}","ansible-lint${{ matrix.ansible_lint_specifier }}","_ansible_test","flake8"]}' -e mafalb_ansible_virtualenv_python=python${{ matrix.python_version }} -t all,debug

      - name: install shellcheck
        run: sudo apt-get install shellcheck

      - name: check ansible version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version
          ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

      - name: check python version
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible --version | grep "^\s*python.* ${{ matrix.python_version }}"

      - name: lint
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          if ansible-lint --version|grep "^ansible-lint 4"
          then
              ANSIBLE_LINT_VERSION=4
          fi
          . tests/lint.sh requirements ${{ matrix.python_version }}

      - name: sanity
        run: |
          source ~/.virtualenvs/ansible/bin/activate
          ansible-test sanity --requirements --python ${{ matrix.python_version }}

  CI:

    needs: ansible-test
    # don't run on pull request from ourselves
    #
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ubuntu-20.04

    strategy:

      fail-fast: false

      matrix:

        os:
        - arch
        - fedora34
        - fedora35
        - c8s
        - c9s
        - alma8
        - rocky8
        - centos7
        - centos8
        - debian9
        - debian10
        - debian11
        - ubuntu16
        - ubuntu18
        - ubuntu20
        - ubuntu2104
        - ubuntu2110

        ansible_version:
        - '2.9'
        - '2.10'
        - '2.11'
        - '2.12'

    env:

      ANSIBLE_VERSION: ${{ matrix.ansible_version }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/openssh

    steps:

    - name: checkout collection mafalb.openssh
      uses: actions/checkout@v2
      with:
        path: ansible_collections/mafalb/openssh

    # use the github actions ansible
    #
    - name: get mafalb.ansible
      if: false
      run: ansible-galaxy collection install mafalb.ansible

    # temporarily use dev branch
    - name: checkout collection mafalb.ansible
      uses: actions/checkout@v2
      with:
        repository: mafalb/ansible-collection-ansible
        ref: dev
        path: ansible_collections/mafalb/ansible

    - name: move collection ansible.mafalb into place
      run: |
        mkdir -p ~/.ansible/collections/ansible_collections/mafalb
        mv ../ansible ~/.ansible/collections/ansible_collections/mafalb/

    # use the system ansible
    #
    - name: install molecule
      run: |
        sudo apt-get install ansible
        /usr/bin/ansible-playbook -D ~/.ansible/collections/ansible_collections/mafalb/ansible/playbooks/molecule.yml -e molecule_ansible_version=${{ matrix.ansible_version }} -t all,debug

    # use our ansible
    #
    - name: check ansible version
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

    - name: molecule tests
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule -e .env-${{ matrix.os }}.yml test

...
