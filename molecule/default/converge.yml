# Copyright (c) 2021 Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

- name: converge clients
  hosts: proxy_group

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  tasks:

  # use the proxy as client for verify steps
  #
  - name: openssh clients are present
    package:
      name: openssh-clients

  - name: ssh user key is present
    openssh_keypair:
      path: /tmp/id_rsa_user
      type: rsa

  - name: ssh admin key is present
    openssh_keypair:
      path: /tmp/id_rsa_admin
      type: rsa


- name: converge server 1
  hosts: one_match

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  roles:

  - role: mafalb.openssh.sshd
    sshd_config:
      PermitRootLogin: without-password
      PasswordAuthentication: 'no'
      Match:
      - 'Group sftpchroot':
          ChrootDirectory: '%h'
          AuthorizedKeysFile: /etc/ssh/authorized_keys/sftpchroot .ssh/authorized_keys
          ForceCommand: internal-sftp


- name: converge a non default config file location
  hosts: one_match

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  roles:

  # this is only for testing role arguments
  # and should not change the running sshd
  #
  - role: mafalb.openssh.sshd
    sshd_config_template: sshd_config_1.j2
    sshd_config_file: /tmp/sshd_config_1.conf

  # this is only for testing role arguments
  # and should not change the running sshd
  #
  - role: mafalb.openssh.sshd
    sshd_config_template: sshd_config_1.j2
    sshd_config_file: /tmp/sshd_config_2.conf
    sshd_config_mode: '0777'


- name: numeric mode fails
  hosts: one_match

  tasks:

  - block:

    # this is only for testing role arguments
    # and should not change the running sshd
    #
    - name: numeric argument
      include_role:
        name: mafalb.openssh.sshd
      vars:
        sshd_config_template: sshd_config_1.j2
        sshd_config_file: /tmp/sshd_config_3.conf
        sshd_config_mode: 0777

    rescue:
    # this is not a great check
    # but include_role returns nothing useful
    - name: failure is expected
      assert:
        that: mafalb_error == 'mode not a string'

- name: Match block that is not a list
  hosts: one_match

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  tasks:

  - block:

    - name: sshd with bad config
      include_role:
        name: mafalb.openssh.sshd
      vars:
        sshd_config:
          PermitRootLogin: without-password
          PasswordAuthentication: 'no'
          Match:
            'Group sftpchroot':
              ChrootDirectory: '%h'
              AuthorizedKeysFile: /etc/ssh/authorized_keys/sftpchroot .ssh/authorized_keys
              ForceCommand: internal-sftp

- name: converge server 2
  hosts: two_matches

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  roles:

  - role: mafalb.openssh.sshd
    sshd_config:
      PermitRootLogin: without-password
      PasswordAuthentication: 'no'
      Match:
      - 'Group sftpchroot':
          ChrootDirectory: '%h'
          AuthorizedKeysFile: /etc/ssh/authorized_keys/sftpchroot .ssh/authorized_keys
          ForceCommand: internal-sftp
      - 'Group sftpchroot2':
          ChrootDirectory: '%h'
          ForceCommand: internal-sftp

- name: converge servers
  hosts: ci

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  tasks:

  - name: get public admin key
    delegate_to: ci-proxy
    command: cat /tmp/id_rsa_admin.pub
    changed_when: false
    register: _public_key_admin
    run_once: true

  - name: get public user key
    delegate_to: ci-proxy
    command: cat /tmp/id_rsa_user.pub
    changed_when: false
    register: _public_key_user
    run_once: true

  - name: user for ssh is present
    block:

    - name: user is present
      user:
        name: testssh1

    - name: authorized_keys is present
      authorized_key:
        user: testssh1
        key: "{{ _public_key_user.stdout }}"

  - name: user for chrooted sftp is present
    block:

    - name: group for chrooted sftp users is present
      group:
        name: sftpchroot

    - name: groups are present
      group:
        name: "{{ item }}"
      loop:
      - testsftp1
      - testsftp2

    - name: home directories are present
      file:
        path: /home/{{ item }}
        state: directory
        owner: root
        group: "{{ item }}"
        mode: 00750
      loop:
      - testsftp1
      - testsftp2


    - name: user is present
      user:
        name: "{{ item }}"
        create_home: false
        group: "{{ item }}"
        groups:
        - sftpchroot
      loop:
      - testsftp1
      - testsftp2

  - name: authorized_keys for admin is present
    include_role:
      name: mafalb.openssh.authorized_keys
    vars:
      group: sftpchroot
      keys: "{{ [ _public_key_admin.stdout ] }}"
      path: /etc/ssh/authorized_keys/sftpchroot
      manage_dir: false
      mode: '640'

  - name: authorized_keys for testsftp1 is present
    include_role:
      name: mafalb.openssh.authorized_keys
    vars:
      user: root
      group: testsftp1
      keys: "{{ [ _public_key_user.stdout ] }}"
      path: /home/testsftp1/.ssh/authorized_keys
      mode: '640'

  - name: testfile is present
    copy:
      content: testfile
      dest: /home/{{ item }}/1_testfile
      mode: 00644
    loop:
    - testsftp1
    - testsftp2

...
