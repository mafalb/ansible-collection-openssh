# vim: set ft=yaml ts=2 expandtab:
---

- name: converge clients
  hosts: proxy_group

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  tasks:

  # use the proxy as client for verify steps
  #
  - name: openssh clients are present
    package:
      name: openssh-clients

  - name: ssh key is present
    openssh_keypair:
      path: /tmp/id_rsa
      type: rsa


- name: converge servers
  hosts: all,!infrastructure_group

  environment:
    http_proxy: http://ci-proxy:3128
    https_proxy: http://ci-proxy:3128

  roles:
  - role: mafalb.openssh.sshd
    sshd_global_authorized_keys: true

  tasks:

  - name: get public key
    delegate_to: ci-proxy
    command: cat /tmp/id_rsa.pub
    changed_when: false
    register: _public_key
    run_once: true

  - block:

    - name: user is present
      user:
        name: "{{ item }}"
      loop:
      - testssh1
      - testssh2

    - name: authorized_keys is present
      authorized_key:
        user: testssh1
        key: "{{ _public_key.stdout }}"

    - name: global authorized_keys is present
      authorized_key:
        user: testssh2
        key: "{{ _public_key.stdout }}"
        path: /etc/ssh/authorized_keys/testssh2
        manage_dir: false

  - block:

    - name: group for chrooted sftp users is present
      group:
        name: sftpchroot

    - name: groups are present
      group:
        name: "{{ item }}"
      loop:
      - testsftp1
      - testsftp2

    - name: home directories are present
      file:
        path: /home/{{ item }}
        state: directory
        owner: root
        group: "{{ item }}"
        mode: 00750
      loop:
      - testsftp1
      - testsftp2

    - name: testfile is present
      copy:
        content: testfile
        dest: /home/{{ item }}/1_testfile
        mode: 00644
      loop:
      - testsftp1
      - testsftp2

    - name: user is present
      user:
        name: "{{ item }}"
        create_home: false
        group: "{{ item }}"
        groups:
        - sftpchroot
      loop:
      - testsftp1
      - testsftp2

    - name: authorized_keys is present
      authorized_key:
        user: testsftp1
        key: "{{ _public_key.stdout }}"
        path: /home/testsftp1/.ssh/authorized_keys

    - name: authorized_keys is present
      authorized_key:
        user: testsftp2
        key: "{{ _public_key.stdout }}"
        path: /etc/ssh/authorized_keys/testsftp2
        manage_dir: false

...
