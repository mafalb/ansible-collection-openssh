# vim: set ft=yaml ts=2 expandtab:

# This file is part of ansible-collection-openssh
# Copyright (c) 2021 Markus Falb <markus.falb@mafalb.at>
#
# ansible-collection-openssh is free software: you can redistribute it 
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# ansible-collection-openssh is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with ansible-collection-openssh.
# If not, see <https://www.gnu.org/licenses/>.

---

- name: Verify sshd_config_template
  hosts: one_match
  tasks:
  - name: sshd_config is present
    command: grep 132418138a13 /tmp/sshd_config_1.conf
    changed_when: false
  - name: sshd_config is present
    command: grep 132418138a13 /tmp/sshd_config_2.conf
    changed_when: false

  - name: get mode of config files
    stat:
      path: "{{ item }}"
    with_items:
    - /tmp/sshd_config_2.conf
    register: _stat

  - debug: var=_stat
  - debug: var=_stat.results[0].stat.mode|string

  - name: assert that mode was set
    assert:
      that:
      - _stat.results[0].stat.mode == '0777'
- name: Verify
  hosts: ci

  module_defaults:
    shell:
      executable: /bin/bash

  tasks:

  - name: ssh login is possible
    delegate_to: ci-proxy
    command: ssh -i /tmp/id_rsa_user -o StrictHostKeyChecking=no testssh1@{{ inventory_hostname }} /bin/true
    changed_when: false

  - name: sftp login is possible 1
    delegate_to: ci-proxy
    shell: |
      sftp -o IdentityFile=/tmp/id_rsa_user -o StrictHostKeyChecking=no testsftp1@{{ inventory_hostname }} <<SFTP
      ls
      SFTP
    changed_when: false
    register: _sftp_1

  - name: sftp login is possible 2
    delegate_to: ci-proxy
    shell: |
      sftp -o IdentityFile=/tmp/id_rsa_user -o StrictHostKeyChecking=no testsftp1@{{ inventory_hostname }} <<SFTP
      cd ..
      ls
      SFTP
    changed_when: false
    register: _sftp_2

  - name: sftp login is possible 3
    delegate_to: ci-proxy
    shell: |
      sftp -o IdentityFile=/tmp/id_rsa_user -o StrictHostKeyChecking=no testsftp1@{{ inventory_hostname }} <<SFTP
      pwd
      SFTP
    changed_when: false
    register: _sftp_3

  - name: assert that we are chrooted
    assert:
      that:
      - _sftp_1.stdout_lines[-1] is match('1_testfile')
      - _sftp_1.stdout_lines[-1] == _sftp_2.stdout_lines[-1]
      # the following is odd, but ansible 2.9 interpreted
      # directory: /
      # as dictionary
      # The error was: unhashable type: 'dict'
      - _sftp_3.stdout_lines[-1] == 'Remote working directory' + ':' + ' /'

  - name: sftp login is possible (global authorized_keys)
    delegate_to: ci-proxy
    shell: |
      sftp -o IdentityFile=/tmp/id_rsa_admin -o StrictHostKeyChecking=no testsftp1@{{ inventory_hostname }} <<SFTP
      SFTP
    changed_when: false

  - name: .ssh is not writable
    become: true
    become_user: testsftp1
    command: test ! -w ~/.ssh
    changed_when: false
    check_mode: false

  - name: authorized_keys is readable
    become: true
    become_user: testsftp1
    command: test -r ~/.ssh/authorized_keys
    changed_when: false
    check_mode: false

  - name: autorized_keys is not writable
    become: true
    become_user: testsftp1
    command: test ! -w ~/.ssh/authorized_keys
    changed_when: false
    check_mode: false

...
